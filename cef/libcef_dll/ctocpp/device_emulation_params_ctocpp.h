// Copyright (c) 2020 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=9f6ba07ba0ab2b04c6ffa6a5d2f219f89947cdea$
//

#ifndef CEF_LIBCEF_DLL_CTOCPP_DEVICE_EMULATION_PARAMS_CTOCPP_H_
#define CEF_LIBCEF_DLL_CTOCPP_DEVICE_EMULATION_PARAMS_CTOCPP_H_
#pragma once

#if !defined(WRAPPING_CEF_SHARED)
#error This file can be included wrapper-side only
#endif

#include "include/capi/cef_device_emulation_params_capi.h"
#include "include/cef_device_emulation_params.h"
#include "libcef_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class CefDeviceEmulationParamsCToCpp
    : public CefCToCppRefCounted<CefDeviceEmulationParamsCToCpp,
                                 CefDeviceEmulationParams,
                                 cef_device_emulation_params_t> {
 public:
  CefDeviceEmulationParamsCToCpp();
  virtual ~CefDeviceEmulationParamsCToCpp();

  // CefDeviceEmulationParams methods.
  void SetScreenType(int type) OVERRIDE;
  void SetScreenSize(int width, int height) OVERRIDE;
  void SetViewPosition(int x, int y) OVERRIDE;
  void SetViewSize(int width, int height) OVERRIDE;
  void SetDeviceScaleFactor(float value) OVERRIDE;
  void SetScale(float value) OVERRIDE;
  void SetViewportOffset(float x, float y) OVERRIDE;
  void SetViewportScale(float value) OVERRIDE;
  void SetScreenOrientationType(int type) OVERRIDE;
  void SetScreenOrientationAngle(int angle) OVERRIDE;
};

#endif  // CEF_LIBCEF_DLL_CTOCPP_DEVICE_EMULATION_PARAMS_CTOCPP_H_
